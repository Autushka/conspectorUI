<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
	<application>conspector-app</application>
	<version>app-7</version>
	

	
<!-- 	<application>regal-elf-770</application> -->
<!-- 	<version>demo-1</version> -->

    <!--
    Allows App Engine to send multiple requests to one instance in parallel:
  -->
  <threadsafe>true</threadsafe>
  
  <!-- Configure java.util.logging -->
  <system-properties>
    <property name="java.util.logging.config.file" value="WEB-INF/logging.properties"/>
  </system-properties>

  <!--
    HTTP Sessions are disabled by default. To enable HTTP sessions specify:
  -->

      <sessions-enabled>true</sessions-enabled>

  <!--
      It's possible to reduce request latency by configuring your application to
    asynchronously write HTTP session data to the datastore:

      <async-session-persistence enabled="true" />

      With this feature enabled, there is a very small chance your app will see
    stale session data. For details, see
    http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions
  -->
  <use-google-connector-j>true</use-google-connector-j>
  
  
  
<instance-class>F2</instance-class>

<!-- <basic-scaling> -->
<!--     <max-instances>1</max-instances> -->
<!--     <idle-timeout>15m</idle-timeout> -->
<!--  </basic-scaling> -->

  <automatic-scaling>
    <min-idle-instances>1</min-idle-instances>
    <!-- ‘automatic’ is the default value. -->
    <max-idle-instances>5</max-idle-instances>
    <!-- ‘automatic’ is the default value. -->
    <min-pending-latency>automatic</min-pending-latency>
    <max-pending-latency>30ms</max-pending-latency>
    <max-concurrent-requests>50</max-concurrent-requests>
  </automatic-scaling>
  
<!--   <manual-scaling> -->
<!--     <instances>1</instances> -->
<!--   </manual-scaling> -->
  
</appengine-web-app>
